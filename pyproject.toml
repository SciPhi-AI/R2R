[build-system]
requires = ["poetry-core", "setuptools", "wheel"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "r2r"
version = "0.2.85"
description = "SciPhi R2R"
authors = ["Owen Colegrove <owen@sciphi.ai>"]
license = "MIT"
readme = "README.md"
include = ["r2r.toml", "compose.yaml", "compose.neo4j.yaml", "compose.ollama.yaml", "compose.postgres.yaml", "pyproject.toml", "alembic.ini"]

[tool.poetry.dependencies]
# Python Versions
python = ">=3.9,<3.13"

# Required dependencies

# python
pydantic = {extras = ["email"], version = "^2.8.2"}
python-multipart = "^0.0.9"

# infrastructure
fastapi = "^0.109.2"
fire = "^0.5.0"
gunicorn = "^21.2.0"
requests = "^2.31.0"
types-requests = "^2.31.0"
uvicorn = "^0.27.0.post1"

# TODO - Make some of these optional
# async db providers
aiosqlite = "^0.20.0"
asyncpg = "^0.29.0"
redis = "^5.0.4"

# ingestion
beautifulsoup4 = "^4.12.3"
openpyxl = "^3.1.2"
markdown = "^3.6"
pypdf = "^4.2.0"
python-pptx = "^0.6.23"
python-docx = "^1.1.0"
nest-asyncio = "^1.6.0"
opencv-python = { version = "^4.10.0.82", optional = true }
moviepy = { version = "^1.0.3", optional = true }

# vector db providers
vecs = "^0.4.0"

# llm providers
litellm = "^1.42.3"
openai = "^1.11.1"

# integrations
fsspec = "^2024.6.0"
posthog = "^3.5.0"
sqlalchemy = "^2.0.30"
ollama = "^0.2.1"
neo4j = "^5.21.0"
passlib = "^1.7.4"
bcrypt = "^4.1.3"
pyjwt = "^2.8.0"
toml = "^0.10.2"
pyyaml = "^6.0.1"
poppler-utils = "^0.1.0"
alembic = "^1.13.2"
# unstructured = {version = "^0.15.0"}
psutil = "^6.0.0"
deepdiff = "^7.0.1"
graspologic = "^3.4.1"

[tool.poetry.extras]
all = ["moviepy", "opencv-python"]
ingest-movies = ["moviepy", "opencv-python"]


[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
codecov = "^2.1.13"
flake8 = "6.1.0"
isort = "5.12.0"
mypy = "^1.5.1"
pre-commit = "^2.9"
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
pytest-dependency = "^0.6.0"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
colorama = "^0.4.6"

[tool.poetry.scripts]
r2r = "r2r.cli.cli:main"

[tool.black]
line-length = 79

[tool.mypy]
ignore_missing_imports = true
exclude = 'playground/.*|deprecated/.*|dump/.*|docs/source|vecs/*'

[[tool.mypy.overrides]]
module = "yaml"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--cov=r2r --cov-report=term-missing --cov-report=xml"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
]

name: Build and Publish ragtoriches/prod

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use default versioning)'
        required: false
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      actions: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Docker Auth
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.RAGTORICHES_DOCKER_UNAME }}
          password: ${{ secrets.RAGTORICHES_DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Determine version to use
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "RELEASE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "RELEASE_VERSION=main" >> $GITHUB_OUTPUT
          fi

      - name: Generate Cache Buster
        id: cache-buster
        run: echo "CACHE_BUSTER=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ragtoriches/prod
          tags: |
            type=raw,value=${{ steps.version.outputs.RELEASE_VERSION }}
            type=raw,value=latest
          tags_unstructured: |
            type=raw,value=${{ steps.version.outputs.RELEASE_VERSION }}
            type=raw,value=latest-unstructured

      - name: Build and Push Docker Image (Standard)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./py/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            CACHE_BUST=${{ steps.cache-buster.outputs.CACHE_BUSTER }}

      - name: Build and Push Docker Image (Unstructured)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./py/Dockerfile.unstructured
          push: true
          tags: ${{ steps.meta.outputs.tags_unstructured }}
          labels: ${{ steps.meta.outputs.labels_unstructured }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            CACHE_BUST=${{ steps.cache-buster.outputs.CACHE_BUSTER }}
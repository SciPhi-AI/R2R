name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use default versioning)'
        required: false
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.version.outputs.RELEASE_VERSION }}
    steps:
      - name: Determine version to use
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "RELEASE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "RELEASE_VERSION=main" >> $GITHUB_OUTPUT
          fi

  build-and-publish-amd64:
    needs: prepare
    runs-on: amd2
    permissions:
      packages: write
      contents: read
      id-token: write
      actions: write
    timeout-minutes: 720
    env:
      BUILDX_NO_DEFAULT_ATTESTATIONS: 1
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure SDK
        run: 'gcloud auth configure-docker us-east1-docker.pkg.dev'

      - name: Docker Auth
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.RAGTORICHES_DOCKER_UNAME }}
          password: ${{ secrets.RAGTORICHES_DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ragtoriches/prod
            us-east1-docker.pkg.dev/alert-rush-397022/sciphi-r2r/r2r
          tags: |
            type=raw,value=${{ needs.prepare.outputs.release_version }}-amd64
            type=raw,value=latest-amd64

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./py
          file: ./py/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          provenance: false
          sbom: false

      - name: Build and Push Docker Image (Unstructured)
        uses: docker/build-push-action@v5
        with:
          context: ./py
          file: ./py/Dockerfile.unstructured
          push: true
          tags: ${{ steps.meta.outputs.tags }}-unstructured
          labels: ${{ steps.meta.outputs.labels }}-unstructured
          platforms: linux/amd64
          provenance: false
          sbom: false

  build-and-publish-arm64:
    needs: prepare
    runs-on: arm2
    permissions:
      packages: write
      contents: read
      id-token: write
      actions: write
    timeout-minutes: 720
    env:
      BUILDX_NO_DEFAULT_ATTESTATIONS: 1
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure SDK
        run: 'gcloud auth configure-docker us-east1-docker.pkg.dev'

      - name: Docker Auth
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.RAGTORICHES_DOCKER_UNAME }}
          password: ${{ secrets.RAGTORICHES_DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ragtoriches/prod
            us-east1-docker.pkg.dev/alert-rush-397022/sciphi-r2r/r2r
          tags: |
            type=raw,value=${{ needs.prepare.outputs.release_version }}-arm64
            type=raw,value=latest-arm64

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./py
          file: ./py/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64
          provenance: false
          sbom: false

      - name: Build and Push Docker Image (Unstructured)
        uses: docker/build-push-action@v5
        with:
          context: ./py
          file: ./py/Dockerfile.unstructured
          push: true
          tags: ${{ steps.meta.outputs.tags }}-unstructured
          labels: ${{ steps.meta.outputs.labels }}-unstructured
          platforms: linux/arm64
          provenance: false
          sbom: false

  create-manifest:
    needs: [prepare, build-and-publish-amd64, build-and-publish-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Docker Auth
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.RAGTORICHES_DOCKER_UNAME }}
          password: ${{ secrets.RAGTORICHES_DOCKER_TOKEN }}

      - name: Create and push manifest
        run: |
          docker buildx imagetools create -t ragtoriches/prod:${{ needs.prepare.outputs.release_version }} \
            ragtoriches/prod:${{ needs.prepare.outputs.release_version }}-amd64 \
            ragtoriches/prod:${{ needs.prepare.outputs.release_version }}-arm64

          docker buildx imagetools create -t ragtoriches/prod:latest \
            ragtoriches/prod:latest-amd64 \
            ragtoriches/prod:latest-arm64

      - name: Create and push manifest (Unstructured)
        run: |
          docker buildx imagetools create -t ragtoriches/prod:${{ needs.prepare.outputs.release_version }}-unstructured \
            ragtoriches/prod:${{ needs.prepare.outputs.release_version }}-amd64-unstructured \
            ragtoriches/prod:${{ needs.prepare.outputs.release_version }}-arm64-unstructured

          docker buildx imagetools create -t ragtoriches/prod:latest-unstructured \
            ragtoriches/prod:latest-amd64-unstructured \
            ragtoriches/prod:latest-arm64-unstructured

      - name: Verify manifests
        run: |
          docker buildx imagetools inspect ragtoriches/prod:${{ needs.prepare.outputs.release_version }}
          docker buildx imagetools inspect ragtoriches/prod:latest
          docker buildx imagetools inspect ragtoriches/prod:${{ needs.prepare.outputs.release_version }}-unstructured
          docker buildx imagetools inspect ragtoriches/prod:latest-unstructured

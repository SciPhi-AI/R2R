# Config Map, Secret, Deployment and Service for R2R
---
apiVersion: v1
kind: Secret
metadata:
  name: r2r-secret
  namespace: r2r-dev
  labels:
    app: r2r
data:
  R2R_POSTGRES_USER: cG9zdGdyZXM=
  R2R_POSTGRES_PASSWORD: cG9zdGdyZXM=
#  R2R_POSTGRES_USER: YW1wbGlmaWRiX2FkbWlu
#  R2R_POSTGRES_PASSWORD: QW1wbGlmaVBhc3N3b3JkODU2Mzc5

#  HATCHET_CLIENT_TOKEN:

# OpenAI
#  OPENAI_API_KEY:
#  OPENAI_API_BASE:

#  Anthropic
#  ANTHROPIC_API_KEY:

# Azure
#  AZURE_API_KEY:
#  AZURE_API_BASE:
#  AZURE_API_VERSION:

# Google Vertex AI
#  GOOGLE_APPLICATION_CREDENTIALS:
#  VERTEX_PROJECT:
#  VERTEX_LOCATION:

# AWS Bedrock
#  AWS_ACCESS_KEY_ID:
#  AWS_SECRET_ACCESS_KEY:
#  AWS_REGION_NAME:


---
apiVersion: v1
data:
  PYTHONUNBUFFERED: "1"
  R2R_PORT: "7272"
  R2R_HOST: "0.0.0.0"
  R2R_PROJECT_NAME: r2r_default
  R2R_CONFIG_NAME: full_local_llm

  R2R_POSTGRES_HOST: postgres
  R2R_POSTGRES_PORT: "5432"
  R2R_POSTGRES_DBNAME: postgres
  R2R_POSTGRES_MAX_CONNECTIONS: "1024"
#  R2R_POSTGRES_HOST: postgres-service
#  R2R_POSTGRES_PORT: "5432"
#  R2R_POSTGRES_DBNAME: r2r_db
#  R2R_POSTGRES_MAX_CONNECTIONS: "1024"

  R2R_POSTGRES_PROJECT_NAME: r2r_default

  OLLAMA_API_BASE: http://ollama:11434
  UNSTRUCTURED_LOCAL_URL: http://unstructured.r2r-dev:7275
  UNSTRUCTURED_NUM_WORKERS: "10"
  HATCHET_CLIENT_TLS_STRATEGY: "none"
  HATCHET_CLIENT_GRPC_MAX_RECV_MESSAGE_LENGTH: "134217728"
  HATCHET_CLIENT_GRPC_MAX_SEND_MESSAGE_LENGTH: "134217728"
  HATCHET_CLIENT_TOKEN: "eyJhbGciOiJFUzI1NiIsICJraWQiOiJ0blNrZncifQ.eyJhdWQiOiJodHRwOi8vaGF0Y2hldC1zdGFjay1hcGk6ODA4MCIsICJleHAiOjQ4ODUwNjgxNjUsICJncnBjX2Jyb2FkY2FzdF9hZGRyZXNzIjoiaGF0Y2hldC1lbmdpbmU6NzA3MCIsICJpYXQiOjE3MzE0NjgxNjUsICJpc3MiOiJodHRwOi8vaGF0Y2hldC1zdGFjay1hcGk6ODA4MCIsICJzZXJ2ZXJfdXJsIjoiaHR0cDovL2hhdGNoZXQtc3RhY2stYXBpOjgwODAiLCAic3ViIjoiNzA3ZDA4NTUtODBhYi00ZTFmLWExNTYtZjFjNDU0NmNiZjUyIiwgInRva2VuX2lkIjoiMDFkMWZmM2EtNmVjMi00NjI4LTgyYTMtNzU1YzNlOTdlZjQ5In0.fNk7crODjUygCv3zckecVGfdr1MrZELvamFbzoCy18JXUDYGhWkpiFRd0jyYQzRZQvyx4NxnOWgl2dRsCikYyQ"

kind: ConfigMap
metadata:
  labels:
    app: r2r
  name: r2r-config
  namespace: r2r-dev

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: r2r
  namespace: r2r-dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: r2r
  template:
    metadata:
      labels:
        app: r2r
    spec:
      containers:
      - name: r2r
        command:
          - /bin/sh
          - -c
          - |
            exec uvicorn core.main.app_entry:app --host $${R2R_HOST} --port $${R2R_PORT}
        image: cramplifidev.azurecr.io/r2r:latest
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: r2r-config
          - secretRef:
              name: r2r-secret
        ports:
          - containerPort: 7272
        readinessProbe:
          httpGet:
            port: 7272
            path: /v2/health
          initialDelaySeconds: 15
        livenessProbe:
          httpGet:
            port: 7272
            path: /v2/health
          initialDelaySeconds: 15
          periodSeconds: 10
        volumeMounts:
          - mountPath: /mnt/r2r-config
            name: r2r-config-mount
      restartPolicy: Always
      volumes:
        - name: r2r-config-mount
          persistentVolumeClaim:
            claimName: pvc-r2r-config-blob
---
apiVersion: v1
kind: Service
metadata:
  name: r2r
  namespace: r2r-dev
spec:
  ports:
  - protocol: TCP
    port: 7272
    targetPort: 7272
  type: LoadBalancer
  selector:
    app: r2r
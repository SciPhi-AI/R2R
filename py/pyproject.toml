[build-system]
requires = ["poetry-core", "setuptools", "wheel"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "r2r"
readme = "README.md"
version = "3.1.28"
description = "SciPhi R2R"
authors = ["Owen Colegrove <owen@sciphi.ai>"]
license = "MIT"
include = ["r2r.toml", "compose.yaml", "compose.neo4j.yaml", "compose.ollama.yaml", "compose.postgres.yaml", "compose.hatchet.yaml", "pyproject.toml"]
packages = [
    { include = "r2r", from = "." },
    { include = "core", from = "." },
    { include = "cli", from = "." },
    { include = "sdk", from = "." },
]

[tool.poetry.dependencies]
# Python Versions
python = ">=3.10,<3.13"


boto3 = "^1.35.17" # for AWS bedrock support
click = "^8.0.0"
fastapi = "^0.109.2"
hatchet-sdk = "^0.36.13"
httpx = "^0.27.0"
nest-asyncio = "^1.6.0"
numpy = ">=1.22.4,<1.29.0"
python-dotenv = "^1.0.1"
requests = "^2.31.0"
toml = "^0.10.2"
types-requests = "^2.31.0"
unstructured-client = "^0.25.5"

# Core dependencies (optional)
future = { version = "^1.0.0", optional = true }
openai = { version = "^1.11.1", optional = true }
pydantic = { extras = ["email"], version = "^2.8.2", optional = true }
python-multipart = { version = "^0.0.9", optional = true }
fire = { version = "^0.5.0", optional = true }
gunicorn = { version = "^21.2.0", optional = true }
uvicorn = { version = "^0.27.0.post1", optional = true }
aiosqlite = { version = "^0.20.0", optional = true }
asyncpg = { version = "^0.29.0", optional = true }
redis = { version = "^5.0.4", optional = true }
beautifulsoup4 = { version = "^4.12.3", optional = true }
openpyxl = { version = "^3.1.2", optional = true }
markdown = { version = "^3.6", optional = true }
pypdf = { version = "^4.2.0", optional = true }
python-pptx = { version = "^1.0.1", optional = true }
python-docx = { version = "^1.1.0", optional = true }
opencv-python = { version = "^4.10.0.82", optional = true }
moviepy = { version = "^1.0.3", optional = true }
vecs = { version = "^0.4.0", optional = true }
litellm = { version = "^1.42.3", optional = true }
fsspec = { version = "^2024.6.0", optional = true }
posthog = { version = "^3.5.0", optional = true }
sqlalchemy = { version = "^2.0.30", optional = true }
ollama = { version = "^0.3.1", optional = true }
neo4j = { version = "^5.21.0", optional = true }
passlib = { version = "^1.7.4", optional = true }
bcrypt = { version = "^4.1.3", optional = true }
pyjwt = { version = "^2.8.0", optional = true }
pyyaml = { version = "^6.0.1", optional = true }
poppler-utils = { version = "^0.1.0", optional = true }
psutil = { version = "^6.0.0", optional = true }
deepdiff = { version = "^7.0.1", optional = true }
tokenizers = { version = "0.19", optional = true }
unstructured = {version = "^0.15.10", optional = true, extras = ["all-docs"]}

[tool.poetry.extras]
core = [
    "future", "pydantic", "python-multipart", "fire", "gunicorn", "unstructured", "unstructured-client",
    "uvicorn", "aiosqlite", "asyncpg", "redis", "beautifulsoup4", "openpyxl",
    "markdown", "pypdf", "python-pptx", "python-docx", "vecs", "litellm", "openai",
    "fsspec", "posthog", "sqlalchemy", "ollama", "neo4j", "passlib", "bcrypt",
    "pyjwt", "toml", "pyyaml", "poppler-utils", "psutil", "deepdiff",
]
core-ingest-movies = ["opencv-python", "moviepy"]

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
codecov = "^2.1.13"
flake8 = "6.1.0"
isort = "5.12.0"
mypy = "^1.5.1"
pre-commit = "^2.9"
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
pytest-dependency = "^0.6.0"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
colorama = "^0.4.6"

[tool.black]
line-length = 79
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
line_length = 79
profile = "black"

[tool.mypy]
ignore_missing_imports = true
exclude = 'playground/.*|deprecated/.*|dump/.*|docs/source|vecs/*'

[[tool.mypy.overrides]]
module = "yaml"
ignore_missing_imports = true

[tool.poetry.scripts]
r2r = "cli.cli:main"

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--cov=r2r --cov-report=term-missing --cov-report=xml --cache-clear"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
]
[agent]
system_instruction_name = "rag_agent"
tool_names = ["local_search"]

  [agent.generation_config]
  model = "lm_studio/llama-3.2-3b-instruct"

[completion]
provider = "litellm"
concurrent_request_limit = 1

  [completion.generation_config]
  model = "lm_studio/llama-3.2-3b-instruct"
  temperature = 0.1
  top_p = 1
  max_tokens_to_sample = 1_024
  stream = false
  add_generation_kwargs = { }

[embedding]
provider = "litellm"
base_model = "lm_studio/text-embedding-nomic-embed-text-v1.5"
base_dimension = nan
batch_size = 128
add_title_as_prefix = true
concurrent_request_limit = 2

[database]
provider = "postgres"

  [database.graph_creation_settings]
    graph_entity_description_prompt = "graphrag_entity_description"
    entity_types = [] # if empty, all entities are extracted
    relation_types = [] # if empty, all relations are extracted
    fragment_merge_count = 4 # number of fragments to merge into a single extraction
    max_knowledge_relationships = 100
    max_description_input_length = 65536
    generation_config = { model = "lm_studio/llama-3.2-3b-instruct" } # and other params, model used for relationshipt extraction

  [database.graph_enrichment_settings]
    community_reports_prompt = "graphrag_community_reports"
    max_summary_input_length = 65536
    generation_config = { model = "lm_studio/llama-3.2-3b-instruct" } # and other params, model used for node description and graph clustering
    leiden_params = {}

  [database.graph_search_settings]
    generation_config = { model = "lm_studio/llama-3.2-3b-instruct" }


[orchestration]
provider = "simple"


[ingestion]
vision_img_model = "lm_studio/llama3.2-vision"
vision_pdf_model = "lm_studio/llama3.2-vision"
chunks_for_document_summary = 16
document_summary_model = "lm_studio/llama-3.2-3b-instruct"

  [ingestion.extra_parsers]
    pdf = "zerox"
